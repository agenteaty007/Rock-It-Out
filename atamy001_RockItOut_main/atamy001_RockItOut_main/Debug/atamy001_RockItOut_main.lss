
atamy001_RockItOut_main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d0  00800100  00000dce  00000e62  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000084  008001d0  008001d0  00000f32  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f32  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000118  00000000  00000000  00000f62  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001057  00000000  00000000  0000107a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000368  00000000  00000000  000020d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000aa9  00000000  00000000  00002439  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000294  00000000  00000000  00002ee4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006fd  00000000  00000000  00003178  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000076f  00000000  00000000  00003875  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000108  00000000  00000000  00003fe4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	61 c0       	rjmp	.+194    	; 0xc4 <__ctors_end>
   2:	00 00       	nop
   4:	7c c0       	rjmp	.+248    	; 0xfe <__bad_interrupt>
   6:	00 00       	nop
   8:	7a c0       	rjmp	.+244    	; 0xfe <__bad_interrupt>
   a:	00 00       	nop
   c:	78 c0       	rjmp	.+240    	; 0xfe <__bad_interrupt>
   e:	00 00       	nop
  10:	76 c0       	rjmp	.+236    	; 0xfe <__bad_interrupt>
  12:	00 00       	nop
  14:	74 c0       	rjmp	.+232    	; 0xfe <__bad_interrupt>
  16:	00 00       	nop
  18:	72 c0       	rjmp	.+228    	; 0xfe <__bad_interrupt>
  1a:	00 00       	nop
  1c:	70 c0       	rjmp	.+224    	; 0xfe <__bad_interrupt>
  1e:	00 00       	nop
  20:	6e c0       	rjmp	.+220    	; 0xfe <__bad_interrupt>
  22:	00 00       	nop
  24:	6c c0       	rjmp	.+216    	; 0xfe <__bad_interrupt>
  26:	00 00       	nop
  28:	6a c0       	rjmp	.+212    	; 0xfe <__bad_interrupt>
  2a:	00 00       	nop
  2c:	68 c0       	rjmp	.+208    	; 0xfe <__bad_interrupt>
  2e:	00 00       	nop
  30:	66 c0       	rjmp	.+204    	; 0xfe <__bad_interrupt>
  32:	00 00       	nop
  34:	10 c1       	rjmp	.+544    	; 0x256 <__vector_13>
  36:	00 00       	nop
  38:	62 c0       	rjmp	.+196    	; 0xfe <__bad_interrupt>
  3a:	00 00       	nop
  3c:	60 c0       	rjmp	.+192    	; 0xfe <__bad_interrupt>
  3e:	00 00       	nop
  40:	5e c0       	rjmp	.+188    	; 0xfe <__bad_interrupt>
  42:	00 00       	nop
  44:	5c c0       	rjmp	.+184    	; 0xfe <__bad_interrupt>
  46:	00 00       	nop
  48:	5a c0       	rjmp	.+180    	; 0xfe <__bad_interrupt>
  4a:	00 00       	nop
  4c:	58 c0       	rjmp	.+176    	; 0xfe <__bad_interrupt>
  4e:	00 00       	nop
  50:	56 c0       	rjmp	.+172    	; 0xfe <__bad_interrupt>
  52:	00 00       	nop
  54:	54 c0       	rjmp	.+168    	; 0xfe <__bad_interrupt>
  56:	00 00       	nop
  58:	52 c0       	rjmp	.+164    	; 0xfe <__bad_interrupt>
  5a:	00 00       	nop
  5c:	50 c0       	rjmp	.+160    	; 0xfe <__bad_interrupt>
  5e:	00 00       	nop
  60:	4e c0       	rjmp	.+156    	; 0xfe <__bad_interrupt>
  62:	00 00       	nop
  64:	4c c0       	rjmp	.+152    	; 0xfe <__bad_interrupt>
  66:	00 00       	nop
  68:	4a c0       	rjmp	.+148    	; 0xfe <__bad_interrupt>
  6a:	00 00       	nop
  6c:	48 c0       	rjmp	.+144    	; 0xfe <__bad_interrupt>
  6e:	00 00       	nop
  70:	46 c0       	rjmp	.+140    	; 0xfe <__bad_interrupt>
  72:	00 00       	nop
  74:	44 c0       	rjmp	.+136    	; 0xfe <__bad_interrupt>
  76:	00 00       	nop
  78:	42 c0       	rjmp	.+132    	; 0xfe <__bad_interrupt>
  7a:	00 00       	nop
  7c:	40 c0       	rjmp	.+128    	; 0xfe <__bad_interrupt>
  7e:	00 00       	nop
  80:	3e c0       	rjmp	.+124    	; 0xfe <__bad_interrupt>
  82:	00 00       	nop
  84:	3c c0       	rjmp	.+120    	; 0xfe <__bad_interrupt>
  86:	00 00       	nop
  88:	3a c0       	rjmp	.+116    	; 0xfe <__bad_interrupt>
  8a:	00 00       	nop
  8c:	d4 01       	movw	r26, r8
  8e:	db 01       	movw	r26, r22
  90:	df 01       	movw	r26, r30
  92:	fd 01       	movw	r30, r26
  94:	04 02       	muls	r16, r20
  96:	0b 02       	muls	r16, r27
  98:	12 02       	muls	r17, r18
  9a:	24 02       	muls	r18, r20
  9c:	24 02       	muls	r18, r20
  9e:	2e 02       	muls	r18, r30
  a0:	35 02       	muls	r19, r21
  a2:	f1 01       	movw	r30, r2
  a4:	eb 01       	movw	r28, r22
  a6:	f7 01       	movw	r30, r14
  a8:	43 02       	muls	r20, r19
  aa:	50 02       	muls	r21, r16
  ac:	52 02       	muls	r21, r18
  ae:	66 02       	muls	r22, r22
  b0:	68 02       	muls	r22, r24
  b2:	71 02       	muls	r23, r17
  b4:	73 02       	muls	r23, r19
  b6:	3f 04       	cpc	r3, r15
  b8:	41 04       	cpc	r4, r1
  ba:	bd 04       	cpc	r11, r13
  bc:	bf 04       	cpc	r11, r15
  be:	cf 04       	cpc	r12, r15
  c0:	5b 02       	muls	r21, r27
  c2:	60 02       	muls	r22, r16

000000c4 <__ctors_end>:
  c4:	11 24       	eor	r1, r1
  c6:	1f be       	out	0x3f, r1	; 63
  c8:	cf ef       	ldi	r28, 0xFF	; 255
  ca:	d0 e4       	ldi	r29, 0x40	; 64
  cc:	de bf       	out	0x3e, r29	; 62
  ce:	cd bf       	out	0x3d, r28	; 61

000000d0 <__do_copy_data>:
  d0:	11 e0       	ldi	r17, 0x01	; 1
  d2:	a0 e0       	ldi	r26, 0x00	; 0
  d4:	b1 e0       	ldi	r27, 0x01	; 1
  d6:	ee ec       	ldi	r30, 0xCE	; 206
  d8:	fd e0       	ldi	r31, 0x0D	; 13
  da:	00 e0       	ldi	r16, 0x00	; 0
  dc:	0b bf       	out	0x3b, r16	; 59
  de:	02 c0       	rjmp	.+4      	; 0xe4 <__do_copy_data+0x14>
  e0:	07 90       	elpm	r0, Z+
  e2:	0d 92       	st	X+, r0
  e4:	a0 3d       	cpi	r26, 0xD0	; 208
  e6:	b1 07       	cpc	r27, r17
  e8:	d9 f7       	brne	.-10     	; 0xe0 <__do_copy_data+0x10>

000000ea <__do_clear_bss>:
  ea:	22 e0       	ldi	r18, 0x02	; 2
  ec:	a0 ed       	ldi	r26, 0xD0	; 208
  ee:	b1 e0       	ldi	r27, 0x01	; 1
  f0:	01 c0       	rjmp	.+2      	; 0xf4 <.do_clear_bss_start>

000000f2 <.do_clear_bss_loop>:
  f2:	1d 92       	st	X+, r1

000000f4 <.do_clear_bss_start>:
  f4:	a4 35       	cpi	r26, 0x54	; 84
  f6:	b2 07       	cpc	r27, r18
  f8:	e1 f7       	brne	.-8      	; 0xf2 <.do_clear_bss_loop>
  fa:	5e d5       	rcall	.+2748   	; 0xbb8 <main>
  fc:	66 c6       	rjmp	.+3276   	; 0xdca <_exit>

000000fe <__bad_interrupt>:
  fe:	80 cf       	rjmp	.-256    	; 0x0 <__vectors>

00000100 <SM2Game>:
		data++;
	}
	data_char = 0x00;
	data_char |= (matrix[data][data2] << data2);
	transmit_data(0x01<<data,data_char);
	data2++;
 100:	80 91 12 02 	lds	r24, 0x0212
 104:	81 30       	cpi	r24, 0x01	; 1
 106:	61 f0       	breq	.+24     	; 0x120 <SM2Game+0x20>
 108:	18 f0       	brcs	.+6      	; 0x110 <SM2Game+0x10>
 10a:	83 30       	cpi	r24, 0x03	; 3
 10c:	b9 f0       	breq	.+46     	; 0x13c <SM2Game+0x3c>
 10e:	1d c0       	rjmp	.+58     	; 0x14a <SM2Game+0x4a>
 110:	80 91 05 02 	lds	r24, 0x0205
 114:	81 30       	cpi	r24, 0x01	; 1
 116:	09 f0       	breq	.+2      	; 0x11a <SM2Game+0x1a>
 118:	79 c0       	rjmp	.+242    	; 0x20c <SM2Game+0x10c>
 11a:	80 93 12 02 	sts	0x0212, r24
 11e:	1b c0       	rjmp	.+54     	; 0x156 <SM2Game+0x56>
 120:	80 91 02 02 	lds	r24, 0x0202
 124:	90 91 03 02 	lds	r25, 0x0203
 128:	4a 97       	sbiw	r24, 0x1a	; 26
 12a:	20 f4       	brcc	.+8      	; 0x134 <SM2Game+0x34>
 12c:	80 91 04 02 	lds	r24, 0x0204
 130:	81 30       	cpi	r24, 0x01	; 1
 132:	89 f4       	brne	.+34     	; 0x156 <SM2Game+0x56>
 134:	83 e0       	ldi	r24, 0x03	; 3
 136:	80 93 12 02 	sts	0x0212, r24
 13a:	63 c0       	rjmp	.+198    	; 0x202 <SM2Game+0x102>
 13c:	80 91 05 02 	lds	r24, 0x0205
 140:	81 11       	cpse	r24, r1
 142:	5f c0       	rjmp	.+190    	; 0x202 <SM2Game+0x102>
 144:	10 92 12 02 	sts	0x0212, r1
 148:	08 95       	ret
 14a:	81 30       	cpi	r24, 0x01	; 1
 14c:	21 f0       	breq	.+8      	; 0x156 <SM2Game+0x56>
 14e:	83 30       	cpi	r24, 0x03	; 3
 150:	09 f4       	brne	.+2      	; 0x154 <SM2Game+0x54>
 152:	57 c0       	rjmp	.+174    	; 0x202 <SM2Game+0x102>
 154:	08 95       	ret
 156:	20 91 0b 02 	lds	r18, 0x020B
 15a:	30 91 0c 02 	lds	r19, 0x020C
 15e:	30 93 fd 01 	sts	0x01FD, r19
 162:	20 93 fc 01 	sts	0x01FC, r18
 166:	80 91 02 02 	lds	r24, 0x0202
 16a:	90 91 03 02 	lds	r25, 0x0203
 16e:	fc 01       	movw	r30, r24
 170:	ee 0f       	add	r30, r30
 172:	ff 1f       	adc	r31, r31
 174:	ee 5b       	subi	r30, 0xBE	; 190
 176:	fe 4f       	sbci	r31, 0xFE	; 254
 178:	60 81       	ld	r22, Z
 17a:	71 81       	ldd	r23, Z+1	; 0x01
 17c:	40 91 00 01 	lds	r20, 0x0100
 180:	50 91 01 01 	lds	r21, 0x0101
 184:	fb 01       	movw	r30, r22
 186:	e4 1b       	sub	r30, r20
 188:	f5 0b       	sbc	r31, r21
 18a:	e2 17       	cp	r30, r18
 18c:	f3 07       	cpc	r31, r19
 18e:	78 f4       	brcc	.+30     	; 0x1ae <SM2Game+0xae>
 190:	46 0f       	add	r20, r22
 192:	57 1f       	adc	r21, r23
 194:	24 17       	cp	r18, r20
 196:	35 07       	cpc	r19, r21
 198:	50 f4       	brcc	.+20     	; 0x1ae <SM2Game+0xae>
 19a:	20 91 fe 01 	lds	r18, 0x01FE
 19e:	30 91 ff 01 	lds	r19, 0x01FF
 1a2:	2f 5f       	subi	r18, 0xFF	; 255
 1a4:	3f 4f       	sbci	r19, 0xFF	; 255
 1a6:	30 93 ff 01 	sts	0x01FF, r19
 1aa:	20 93 fe 01 	sts	0x01FE, r18
 1ae:	40 91 00 02 	lds	r20, 0x0200
 1b2:	50 91 01 02 	lds	r21, 0x0201
 1b6:	fc 01       	movw	r30, r24
 1b8:	ee 0f       	add	r30, r30
 1ba:	ff 1f       	adc	r31, r31
 1bc:	e2 5f       	subi	r30, 0xF2	; 242
 1be:	fe 4f       	sbci	r31, 0xFE	; 254
 1c0:	20 81       	ld	r18, Z
 1c2:	31 81       	ldd	r19, Z+1	; 0x01
 1c4:	b9 01       	movw	r22, r18
 1c6:	66 0f       	add	r22, r22
 1c8:	77 1f       	adc	r23, r23
 1ca:	22 0f       	add	r18, r18
 1cc:	33 1f       	adc	r19, r19
 1ce:	22 0f       	add	r18, r18
 1d0:	33 1f       	adc	r19, r19
 1d2:	22 0f       	add	r18, r18
 1d4:	33 1f       	adc	r19, r19
 1d6:	26 0f       	add	r18, r22
 1d8:	37 1f       	adc	r19, r23
 1da:	24 17       	cp	r18, r20
 1dc:	35 07       	cpc	r19, r21
 1de:	50 f4       	brcc	.+20     	; 0x1f4 <SM2Game+0xf4>
 1e0:	01 96       	adiw	r24, 0x01	; 1
 1e2:	90 93 03 02 	sts	0x0203, r25
 1e6:	80 93 02 02 	sts	0x0202, r24
 1ea:	10 92 01 02 	sts	0x0201, r1
 1ee:	10 92 00 02 	sts	0x0200, r1
 1f2:	08 95       	ret
 1f4:	4f 5f       	subi	r20, 0xFF	; 255
 1f6:	5f 4f       	sbci	r21, 0xFF	; 255
 1f8:	50 93 01 02 	sts	0x0201, r21
 1fc:	40 93 00 02 	sts	0x0200, r20
 200:	08 95       	ret
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	80 93 04 02 	sts	0x0204, r24
 208:	10 92 05 02 	sts	0x0205, r1
 20c:	08 95       	ret

0000020e <TimerOn>:
 20e:	8b e0       	ldi	r24, 0x0B	; 11
 210:	80 93 81 00 	sts	0x0081, r24
 214:	8d e7       	ldi	r24, 0x7D	; 125
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	90 93 89 00 	sts	0x0089, r25
 21c:	80 93 88 00 	sts	0x0088, r24
 220:	82 e0       	ldi	r24, 0x02	; 2
 222:	80 93 6f 00 	sts	0x006F, r24
 226:	10 92 85 00 	sts	0x0085, r1
 22a:	10 92 84 00 	sts	0x0084, r1
 22e:	80 91 02 01 	lds	r24, 0x0102
 232:	90 91 03 01 	lds	r25, 0x0103
 236:	a0 91 04 01 	lds	r26, 0x0104
 23a:	b0 91 05 01 	lds	r27, 0x0105
 23e:	80 93 0d 02 	sts	0x020D, r24
 242:	90 93 0e 02 	sts	0x020E, r25
 246:	a0 93 0f 02 	sts	0x020F, r26
 24a:	b0 93 10 02 	sts	0x0210, r27
 24e:	8f b7       	in	r24, 0x3f	; 63
 250:	80 68       	ori	r24, 0x80	; 128
 252:	8f bf       	out	0x3f, r24	; 63
 254:	08 95       	ret

00000256 <__vector_13>:
 256:	1f 92       	push	r1
 258:	0f 92       	push	r0
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	0f 92       	push	r0
 25e:	11 24       	eor	r1, r1
 260:	8f 93       	push	r24
 262:	9f 93       	push	r25
 264:	af 93       	push	r26
 266:	bf 93       	push	r27
 268:	80 91 0d 02 	lds	r24, 0x020D
 26c:	90 91 0e 02 	lds	r25, 0x020E
 270:	a0 91 0f 02 	lds	r26, 0x020F
 274:	b0 91 10 02 	lds	r27, 0x0210
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	a1 09       	sbc	r26, r1
 27c:	b1 09       	sbc	r27, r1
 27e:	80 93 0d 02 	sts	0x020D, r24
 282:	90 93 0e 02 	sts	0x020E, r25
 286:	a0 93 0f 02 	sts	0x020F, r26
 28a:	b0 93 10 02 	sts	0x0210, r27
 28e:	89 2b       	or	r24, r25
 290:	8a 2b       	or	r24, r26
 292:	8b 2b       	or	r24, r27
 294:	99 f4       	brne	.+38     	; 0x2bc <__vector_13+0x66>
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	80 93 11 02 	sts	0x0211, r24
 29c:	80 91 02 01 	lds	r24, 0x0102
 2a0:	90 91 03 01 	lds	r25, 0x0103
 2a4:	a0 91 04 01 	lds	r26, 0x0104
 2a8:	b0 91 05 01 	lds	r27, 0x0105
 2ac:	80 93 0d 02 	sts	0x020D, r24
 2b0:	90 93 0e 02 	sts	0x020E, r25
 2b4:	a0 93 0f 02 	sts	0x020F, r26
 2b8:	b0 93 10 02 	sts	0x0210, r27
 2bc:	bf 91       	pop	r27
 2be:	af 91       	pop	r26
 2c0:	9f 91       	pop	r25
 2c2:	8f 91       	pop	r24
 2c4:	0f 90       	pop	r0
 2c6:	0f be       	out	0x3f, r0	; 63
 2c8:	0f 90       	pop	r0
 2ca:	1f 90       	pop	r1
 2cc:	18 95       	reti

000002ce <delay_ms>:
 2ce:	18 16       	cp	r1, r24
 2d0:	19 06       	cpc	r1, r25
 2d2:	9c f4       	brge	.+38     	; 0x2fa <delay_ms+0x2c>
 2d4:	40 e0       	ldi	r20, 0x00	; 0
 2d6:	50 e0       	ldi	r21, 0x00	; 0
 2d8:	77 e0       	ldi	r23, 0x07	; 7
 2da:	63 e0       	ldi	r22, 0x03	; 3
 2dc:	0b c0       	rjmp	.+22     	; 0x2f4 <delay_ms+0x26>
 2de:	00 00       	nop
 2e0:	21 50       	subi	r18, 0x01	; 1
 2e2:	31 09       	sbc	r19, r1
 2e4:	21 15       	cp	r18, r1
 2e6:	31 05       	cpc	r19, r1
 2e8:	d1 f7       	brne	.-12     	; 0x2de <delay_ms+0x10>
 2ea:	4f 5f       	subi	r20, 0xFF	; 255
 2ec:	5f 4f       	sbci	r21, 0xFF	; 255
 2ee:	48 17       	cp	r20, r24
 2f0:	59 07       	cpc	r21, r25
 2f2:	19 f0       	breq	.+6      	; 0x2fa <delay_ms+0x2c>
 2f4:	27 2f       	mov	r18, r23
 2f6:	36 2f       	mov	r19, r22
 2f8:	f2 cf       	rjmp	.-28     	; 0x2de <delay_ms+0x10>
 2fa:	08 95       	ret

000002fc <LCD_WriteCommand>:
 2fc:	11 98       	cbi	0x02, 1	; 2
 2fe:	88 b9       	out	0x08, r24	; 8
 300:	12 9a       	sbi	0x02, 2	; 2
 302:	00 00       	nop
 304:	12 98       	cbi	0x02, 2	; 2
 306:	82 e0       	ldi	r24, 0x02	; 2
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	e1 cf       	rjmp	.-62     	; 0x2ce <delay_ms>
 30c:	08 95       	ret

0000030e <LCD_ClearScreen>:
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	f5 cf       	rjmp	.-22     	; 0x2fc <LCD_WriteCommand>
 312:	08 95       	ret

00000314 <LCD_Cursor>:
 314:	81 31       	cpi	r24, 0x11	; 17
 316:	18 f4       	brcc	.+6      	; 0x31e <LCD_Cursor+0xa>
 318:	81 58       	subi	r24, 0x81	; 129
 31a:	f0 cf       	rjmp	.-32     	; 0x2fc <LCD_WriteCommand>
 31c:	08 95       	ret
 31e:	81 55       	subi	r24, 0x51	; 81
 320:	ed cf       	rjmp	.-38     	; 0x2fc <LCD_WriteCommand>
 322:	08 95       	ret

00000324 <LCD_init>:
 324:	84 e6       	ldi	r24, 0x64	; 100
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	d2 df       	rcall	.-92     	; 0x2ce <delay_ms>
 32a:	88 e3       	ldi	r24, 0x38	; 56
 32c:	e7 df       	rcall	.-50     	; 0x2fc <LCD_WriteCommand>
 32e:	86 e0       	ldi	r24, 0x06	; 6
 330:	e5 df       	rcall	.-54     	; 0x2fc <LCD_WriteCommand>
 332:	8f e0       	ldi	r24, 0x0F	; 15
 334:	e3 df       	rcall	.-58     	; 0x2fc <LCD_WriteCommand>
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	e1 df       	rcall	.-62     	; 0x2fc <LCD_WriteCommand>
 33a:	8a e0       	ldi	r24, 0x0A	; 10
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	c7 cf       	rjmp	.-114    	; 0x2ce <delay_ms>
 340:	08 95       	ret

00000342 <LCD_WriteData>:
 342:	11 9a       	sbi	0x02, 1	; 2
 344:	88 b9       	out	0x08, r24	; 8
 346:	12 9a       	sbi	0x02, 2	; 2
 348:	00 00       	nop
 34a:	12 98       	cbi	0x02, 2	; 2
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	be cf       	rjmp	.-132    	; 0x2ce <delay_ms>
 352:	08 95       	ret

00000354 <LCD_DisplayString>:
 354:	1f 93       	push	r17
 356:	cf 93       	push	r28
 358:	df 93       	push	r29
 35a:	fb 01       	movw	r30, r22
 35c:	90 81       	ld	r25, Z
 35e:	99 23       	and	r25, r25
 360:	59 f0       	breq	.+22     	; 0x378 <LCD_DisplayString+0x24>
 362:	eb 01       	movw	r28, r22
 364:	11 e0       	ldi	r17, 0x01	; 1
 366:	18 0f       	add	r17, r24
 368:	d5 df       	rcall	.-86     	; 0x314 <LCD_Cursor>
 36a:	89 91       	ld	r24, Y+
 36c:	ea df       	rcall	.-44     	; 0x342 <LCD_WriteData>
 36e:	88 81       	ld	r24, Y
 370:	88 23       	and	r24, r24
 372:	11 f0       	breq	.+4      	; 0x378 <LCD_DisplayString+0x24>
 374:	81 2f       	mov	r24, r17
 376:	f6 cf       	rjmp	.-20     	; 0x364 <LCD_DisplayString+0x10>
 378:	df 91       	pop	r29
 37a:	cf 91       	pop	r28
 37c:	1f 91       	pop	r17
 37e:	08 95       	ret

00000380 <SM1Menu>:
 380:	1f 93       	push	r17
 382:	cf 93       	push	r28
 384:	df 93       	push	r29
 386:	30 b1       	in	r19, 0x00	; 0
 388:	23 2f       	mov	r18, r19
 38a:	20 7f       	andi	r18, 0xF0	; 240
 38c:	20 93 06 02 	sts	0x0206, r18
 390:	40 91 13 02 	lds	r20, 0x0213
 394:	84 2f       	mov	r24, r20
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	8e 30       	cpi	r24, 0x0E	; 14
 39a:	91 05       	cpc	r25, r1
 39c:	08 f0       	brcs	.+2      	; 0x3a0 <SM1Menu+0x20>
 39e:	69 c0       	rjmp	.+210    	; 0x472 <SM1Menu+0xf2>
 3a0:	fc 01       	movw	r30, r24
 3a2:	ea 5b       	subi	r30, 0xBA	; 186
 3a4:	ff 4f       	sbci	r31, 0xFF	; 255
 3a6:	fc c4       	rjmp	.+2552   	; 0xda0 <__tablejump2__>
 3a8:	22 23       	and	r18, r18
 3aa:	0c f4       	brge	.+2      	; 0x3ae <SM1Menu+0x2e>
 3ac:	6c c0       	rjmp	.+216    	; 0x486 <SM1Menu+0x106>
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	80 93 13 02 	sts	0x0213, r24
 3b4:	75 c0       	rjmp	.+234    	; 0x4a0 <SM1Menu+0x120>
 3b6:	82 e0       	ldi	r24, 0x02	; 2
 3b8:	80 93 13 02 	sts	0x0213, r24
 3bc:	73 c0       	rjmp	.+230    	; 0x4a4 <SM1Menu+0x124>
 3be:	22 23       	and	r18, r18
 3c0:	24 f0       	brlt	.+8      	; 0x3ca <SM1Menu+0x4a>
 3c2:	83 e0       	ldi	r24, 0x03	; 3
 3c4:	80 93 13 02 	sts	0x0213, r24
 3c8:	81 c0       	rjmp	.+258    	; 0x4cc <SM1Menu+0x14c>
 3ca:	35 fd       	sbrc	r19, 5
 3cc:	6b c0       	rjmp	.+214    	; 0x4a4 <SM1Menu+0x124>
 3ce:	8c e0       	ldi	r24, 0x0C	; 12
 3d0:	80 93 13 02 	sts	0x0213, r24
 3d4:	70 c0       	rjmp	.+224    	; 0x4b6 <SM1Menu+0x136>
 3d6:	35 ff       	sbrs	r19, 5
 3d8:	6e c0       	rjmp	.+220    	; 0x4b6 <SM1Menu+0x136>
 3da:	8b e0       	ldi	r24, 0x0B	; 11
 3dc:	80 93 13 02 	sts	0x0213, r24
 3e0:	de c2       	rjmp	.+1468   	; 0x99e <SM1Menu+0x61e>
 3e2:	34 fd       	sbrc	r19, 4
 3e4:	dc c2       	rjmp	.+1464   	; 0x99e <SM1Menu+0x61e>
 3e6:	8d e0       	ldi	r24, 0x0D	; 13
 3e8:	80 93 13 02 	sts	0x0213, r24
 3ec:	69 c0       	rjmp	.+210    	; 0x4c0 <SM1Menu+0x140>
 3ee:	34 ff       	sbrs	r19, 4
 3f0:	67 c0       	rjmp	.+206    	; 0x4c0 <SM1Menu+0x140>
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	80 93 13 02 	sts	0x0213, r24
 3f8:	53 c0       	rjmp	.+166    	; 0x4a0 <SM1Menu+0x120>
 3fa:	22 23       	and	r18, r18
 3fc:	0c f0       	brlt	.+2      	; 0x400 <SM1Menu+0x80>
 3fe:	66 c0       	rjmp	.+204    	; 0x4cc <SM1Menu+0x14c>
 400:	84 e0       	ldi	r24, 0x04	; 4
 402:	80 93 13 02 	sts	0x0213, r24
 406:	64 c0       	rjmp	.+200    	; 0x4d0 <SM1Menu+0x150>
 408:	22 23       	and	r18, r18
 40a:	0c f4       	brge	.+2      	; 0x40e <SM1Menu+0x8e>
 40c:	61 c0       	rjmp	.+194    	; 0x4d0 <SM1Menu+0x150>
 40e:	85 e0       	ldi	r24, 0x05	; 5
 410:	80 93 13 02 	sts	0x0213, r24
 414:	66 c0       	rjmp	.+204    	; 0x4e2 <SM1Menu+0x162>
 416:	22 23       	and	r18, r18
 418:	0c f0       	brlt	.+2      	; 0x41c <SM1Menu+0x9c>
 41a:	63 c0       	rjmp	.+198    	; 0x4e2 <SM1Menu+0x162>
 41c:	86 e0       	ldi	r24, 0x06	; 6
 41e:	80 93 13 02 	sts	0x0213, r24
 422:	61 c0       	rjmp	.+194    	; 0x4e6 <SM1Menu+0x166>
 424:	80 91 04 02 	lds	r24, 0x0204
 428:	88 23       	and	r24, r24
 42a:	21 f0       	breq	.+8      	; 0x434 <SM1Menu+0xb4>
 42c:	87 e0       	ldi	r24, 0x07	; 7
 42e:	80 93 13 02 	sts	0x0213, r24
 432:	25 c2       	rjmp	.+1098   	; 0x87e <SM1Menu+0x4fe>
 434:	22 23       	and	r18, r18
 436:	0c f4       	brge	.+2      	; 0x43a <SM1Menu+0xba>
 438:	56 c0       	rjmp	.+172    	; 0x4e6 <SM1Menu+0x166>
 43a:	81 e0       	ldi	r24, 0x01	; 1
 43c:	80 93 04 02 	sts	0x0204, r24
 440:	87 e0       	ldi	r24, 0x07	; 7
 442:	80 93 13 02 	sts	0x0213, r24
 446:	1b c2       	rjmp	.+1078   	; 0x87e <SM1Menu+0x4fe>
 448:	22 23       	and	r18, r18
 44a:	24 f0       	brlt	.+8      	; 0x454 <SM1Menu+0xd4>
 44c:	89 e0       	ldi	r24, 0x09	; 9
 44e:	80 93 13 02 	sts	0x0213, r24
 452:	93 c2       	rjmp	.+1318   	; 0x97a <SM1Menu+0x5fa>
 454:	88 e0       	ldi	r24, 0x08	; 8
 456:	80 93 13 02 	sts	0x0213, r24
 45a:	13 c2       	rjmp	.+1062   	; 0x882 <SM1Menu+0x502>
 45c:	22 23       	and	r18, r18
 45e:	0c f0       	brlt	.+2      	; 0x462 <SM1Menu+0xe2>
 460:	8c c2       	rjmp	.+1304   	; 0x97a <SM1Menu+0x5fa>
 462:	8a e0       	ldi	r24, 0x0A	; 10
 464:	80 93 13 02 	sts	0x0213, r24
 468:	8a c2       	rjmp	.+1300   	; 0x97e <SM1Menu+0x5fe>
 46a:	82 e0       	ldi	r24, 0x02	; 2
 46c:	80 93 13 02 	sts	0x0213, r24
 470:	19 c0       	rjmp	.+50     	; 0x4a4 <SM1Menu+0x124>
 472:	84 2f       	mov	r24, r20
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	8e 30       	cpi	r24, 0x0E	; 14
 478:	91 05       	cpc	r25, r1
 47a:	08 f0       	brcs	.+2      	; 0x47e <SM1Menu+0xfe>
 47c:	90 c2       	rjmp	.+1312   	; 0x99e <SM1Menu+0x61e>
 47e:	fc 01       	movw	r30, r24
 480:	ec 5a       	subi	r30, 0xAC	; 172
 482:	ff 4f       	sbci	r31, 0xFF	; 255
 484:	8d c4       	rjmp	.+2330   	; 0xda0 <__tablejump2__>
 486:	81 e0       	ldi	r24, 0x01	; 1
 488:	45 df       	rcall	.-374    	; 0x314 <LCD_Cursor>
 48a:	62 ec       	ldi	r22, 0xC2	; 194
 48c:	71 e0       	ldi	r23, 0x01	; 1
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	61 df       	rcall	.-318    	; 0x354 <LCD_DisplayString>
 492:	67 eb       	ldi	r22, 0xB7	; 183
 494:	71 e0       	ldi	r23, 0x01	; 1
 496:	81 e1       	ldi	r24, 0x11	; 17
 498:	5d df       	rcall	.-326    	; 0x354 <LCD_DisplayString>
 49a:	81 e2       	ldi	r24, 0x21	; 33
 49c:	3b df       	rcall	.-394    	; 0x314 <LCD_Cursor>
 49e:	7f c2       	rjmp	.+1278   	; 0x99e <SM1Menu+0x61e>
 4a0:	36 df       	rcall	.-404    	; 0x30e <LCD_ClearScreen>
 4a2:	7d c2       	rjmp	.+1274   	; 0x99e <SM1Menu+0x61e>
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	36 df       	rcall	.-404    	; 0x314 <LCD_Cursor>
 4a8:	61 eb       	ldi	r22, 0xB1	; 177
 4aa:	71 e0       	ldi	r23, 0x01	; 1
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	52 df       	rcall	.-348    	; 0x354 <LCD_DisplayString>
 4b0:	81 e2       	ldi	r24, 0x21	; 33
 4b2:	30 df       	rcall	.-416    	; 0x314 <LCD_Cursor>
 4b4:	74 c2       	rjmp	.+1256   	; 0x99e <SM1Menu+0x61e>
 4b6:	66 e8       	ldi	r22, 0x86	; 134
 4b8:	71 e0       	ldi	r23, 0x01	; 1
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	4b df       	rcall	.-362    	; 0x354 <LCD_DisplayString>
 4be:	6f c2       	rjmp	.+1246   	; 0x99e <SM1Menu+0x61e>
 4c0:	26 df       	rcall	.-436    	; 0x30e <LCD_ClearScreen>
 4c2:	61 eb       	ldi	r22, 0xB1	; 177
 4c4:	71 e0       	ldi	r23, 0x01	; 1
 4c6:	81 e0       	ldi	r24, 0x01	; 1
 4c8:	45 df       	rcall	.-374    	; 0x354 <LCD_DisplayString>
 4ca:	69 c2       	rjmp	.+1234   	; 0x99e <SM1Menu+0x61e>
 4cc:	20 df       	rcall	.-448    	; 0x30e <LCD_ClearScreen>
 4ce:	67 c2       	rjmp	.+1230   	; 0x99e <SM1Menu+0x61e>
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	20 df       	rcall	.-448    	; 0x314 <LCD_Cursor>
 4d4:	62 ea       	ldi	r22, 0xA2	; 162
 4d6:	71 e0       	ldi	r23, 0x01	; 1
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	3c df       	rcall	.-392    	; 0x354 <LCD_DisplayString>
 4dc:	81 e2       	ldi	r24, 0x21	; 33
 4de:	1a df       	rcall	.-460    	; 0x314 <LCD_Cursor>
 4e0:	5e c2       	rjmp	.+1212   	; 0x99e <SM1Menu+0x61e>
 4e2:	15 df       	rcall	.-470    	; 0x30e <LCD_ClearScreen>
 4e4:	5c c2       	rjmp	.+1208   	; 0x99e <SM1Menu+0x61e>
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	80 93 05 02 	sts	0x0205, r24
 4ec:	10 df       	rcall	.-480    	; 0x30e <LCD_ClearScreen>
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	11 df       	rcall	.-478    	; 0x314 <LCD_Cursor>
 4f2:	40 91 02 02 	lds	r20, 0x0202
 4f6:	50 91 03 02 	lds	r21, 0x0203
 4fa:	9a 01       	movw	r18, r20
 4fc:	36 95       	lsr	r19
 4fe:	27 95       	ror	r18
 500:	36 95       	lsr	r19
 502:	27 95       	ror	r18
 504:	36 95       	lsr	r19
 506:	27 95       	ror	r18
 508:	a5 ec       	ldi	r26, 0xC5	; 197
 50a:	b0 e2       	ldi	r27, 0x20	; 32
 50c:	4f d4       	rcall	.+2206   	; 0xdac <__umulhisi3>
 50e:	92 95       	swap	r25
 510:	82 95       	swap	r24
 512:	8f 70       	andi	r24, 0x0F	; 15
 514:	89 27       	eor	r24, r25
 516:	9f 70       	andi	r25, 0x0F	; 15
 518:	89 27       	eor	r24, r25
 51a:	c8 ee       	ldi	r28, 0xE8	; 232
 51c:	d3 e0       	ldi	r29, 0x03	; 3
 51e:	8c 9f       	mul	r24, r28
 520:	90 01       	movw	r18, r0
 522:	8d 9f       	mul	r24, r29
 524:	30 0d       	add	r19, r0
 526:	9c 9f       	mul	r25, r28
 528:	30 0d       	add	r19, r0
 52a:	11 24       	eor	r1, r1
 52c:	42 1b       	sub	r20, r18
 52e:	53 0b       	sbc	r21, r19
 530:	9a 01       	movw	r18, r20
 532:	36 95       	lsr	r19
 534:	27 95       	ror	r18
 536:	36 95       	lsr	r19
 538:	27 95       	ror	r18
 53a:	ab e7       	ldi	r26, 0x7B	; 123
 53c:	b4 e1       	ldi	r27, 0x14	; 20
 53e:	36 d4       	rcall	.+2156   	; 0xdac <__umulhisi3>
 540:	96 95       	lsr	r25
 542:	87 95       	ror	r24
 544:	80 5d       	subi	r24, 0xD0	; 208
 546:	fd de       	rcall	.-518    	; 0x342 <LCD_WriteData>
 548:	40 91 02 02 	lds	r20, 0x0202
 54c:	50 91 03 02 	lds	r21, 0x0203
 550:	9a 01       	movw	r18, r20
 552:	36 95       	lsr	r19
 554:	27 95       	ror	r18
 556:	36 95       	lsr	r19
 558:	27 95       	ror	r18
 55a:	ab e7       	ldi	r26, 0x7B	; 123
 55c:	b4 e1       	ldi	r27, 0x14	; 20
 55e:	26 d4       	rcall	.+2124   	; 0xdac <__umulhisi3>
 560:	96 95       	lsr	r25
 562:	87 95       	ror	r24
 564:	14 e6       	ldi	r17, 0x64	; 100
 566:	18 9f       	mul	r17, r24
 568:	90 01       	movw	r18, r0
 56a:	19 9f       	mul	r17, r25
 56c:	30 0d       	add	r19, r0
 56e:	11 24       	eor	r1, r1
 570:	ca 01       	movw	r24, r20
 572:	82 1b       	sub	r24, r18
 574:	93 0b       	sbc	r25, r19
 576:	9c 01       	movw	r18, r24
 578:	ad ec       	ldi	r26, 0xCD	; 205
 57a:	bc ec       	ldi	r27, 0xCC	; 204
 57c:	17 d4       	rcall	.+2094   	; 0xdac <__umulhisi3>
 57e:	96 95       	lsr	r25
 580:	87 95       	ror	r24
 582:	96 95       	lsr	r25
 584:	87 95       	ror	r24
 586:	96 95       	lsr	r25
 588:	87 95       	ror	r24
 58a:	80 5d       	subi	r24, 0xD0	; 208
 58c:	da de       	rcall	.-588    	; 0x342 <LCD_WriteData>
 58e:	40 91 02 02 	lds	r20, 0x0202
 592:	50 91 03 02 	lds	r21, 0x0203
 596:	9a 01       	movw	r18, r20
 598:	ad ec       	ldi	r26, 0xCD	; 205
 59a:	bc ec       	ldi	r27, 0xCC	; 204
 59c:	07 d4       	rcall	.+2062   	; 0xdac <__umulhisi3>
 59e:	96 95       	lsr	r25
 5a0:	87 95       	ror	r24
 5a2:	96 95       	lsr	r25
 5a4:	87 95       	ror	r24
 5a6:	96 95       	lsr	r25
 5a8:	87 95       	ror	r24
 5aa:	9c 01       	movw	r18, r24
 5ac:	22 0f       	add	r18, r18
 5ae:	33 1f       	adc	r19, r19
 5b0:	88 0f       	add	r24, r24
 5b2:	99 1f       	adc	r25, r25
 5b4:	88 0f       	add	r24, r24
 5b6:	99 1f       	adc	r25, r25
 5b8:	88 0f       	add	r24, r24
 5ba:	99 1f       	adc	r25, r25
 5bc:	82 0f       	add	r24, r18
 5be:	93 1f       	adc	r25, r19
 5c0:	9a 01       	movw	r18, r20
 5c2:	28 1b       	sub	r18, r24
 5c4:	39 0b       	sbc	r19, r25
 5c6:	c9 01       	movw	r24, r18
 5c8:	80 5d       	subi	r24, 0xD0	; 208
 5ca:	bb de       	rcall	.-650    	; 0x342 <LCD_WriteData>
 5cc:	85 e0       	ldi	r24, 0x05	; 5
 5ce:	a2 de       	rcall	.-700    	; 0x314 <LCD_Cursor>
 5d0:	40 91 fc 01 	lds	r20, 0x01FC
 5d4:	50 91 fd 01 	lds	r21, 0x01FD
 5d8:	9a 01       	movw	r18, r20
 5da:	36 95       	lsr	r19
 5dc:	27 95       	ror	r18
 5de:	36 95       	lsr	r19
 5e0:	27 95       	ror	r18
 5e2:	36 95       	lsr	r19
 5e4:	27 95       	ror	r18
 5e6:	a5 ec       	ldi	r26, 0xC5	; 197
 5e8:	b0 e2       	ldi	r27, 0x20	; 32
 5ea:	e0 d3       	rcall	.+1984   	; 0xdac <__umulhisi3>
 5ec:	92 95       	swap	r25
 5ee:	82 95       	swap	r24
 5f0:	8f 70       	andi	r24, 0x0F	; 15
 5f2:	89 27       	eor	r24, r25
 5f4:	9f 70       	andi	r25, 0x0F	; 15
 5f6:	89 27       	eor	r24, r25
 5f8:	8c 9f       	mul	r24, r28
 5fa:	90 01       	movw	r18, r0
 5fc:	8d 9f       	mul	r24, r29
 5fe:	30 0d       	add	r19, r0
 600:	9c 9f       	mul	r25, r28
 602:	30 0d       	add	r19, r0
 604:	11 24       	eor	r1, r1
 606:	42 1b       	sub	r20, r18
 608:	53 0b       	sbc	r21, r19
 60a:	9a 01       	movw	r18, r20
 60c:	36 95       	lsr	r19
 60e:	27 95       	ror	r18
 610:	36 95       	lsr	r19
 612:	27 95       	ror	r18
 614:	ab e7       	ldi	r26, 0x7B	; 123
 616:	b4 e1       	ldi	r27, 0x14	; 20
 618:	c9 d3       	rcall	.+1938   	; 0xdac <__umulhisi3>
 61a:	96 95       	lsr	r25
 61c:	87 95       	ror	r24
 61e:	80 5d       	subi	r24, 0xD0	; 208
 620:	90 de       	rcall	.-736    	; 0x342 <LCD_WriteData>
 622:	40 91 fc 01 	lds	r20, 0x01FC
 626:	50 91 fd 01 	lds	r21, 0x01FD
 62a:	9a 01       	movw	r18, r20
 62c:	36 95       	lsr	r19
 62e:	27 95       	ror	r18
 630:	36 95       	lsr	r19
 632:	27 95       	ror	r18
 634:	ab e7       	ldi	r26, 0x7B	; 123
 636:	b4 e1       	ldi	r27, 0x14	; 20
 638:	b9 d3       	rcall	.+1906   	; 0xdac <__umulhisi3>
 63a:	96 95       	lsr	r25
 63c:	87 95       	ror	r24
 63e:	18 9f       	mul	r17, r24
 640:	90 01       	movw	r18, r0
 642:	19 9f       	mul	r17, r25
 644:	30 0d       	add	r19, r0
 646:	11 24       	eor	r1, r1
 648:	ca 01       	movw	r24, r20
 64a:	82 1b       	sub	r24, r18
 64c:	93 0b       	sbc	r25, r19
 64e:	9c 01       	movw	r18, r24
 650:	ad ec       	ldi	r26, 0xCD	; 205
 652:	bc ec       	ldi	r27, 0xCC	; 204
 654:	ab d3       	rcall	.+1878   	; 0xdac <__umulhisi3>
 656:	96 95       	lsr	r25
 658:	87 95       	ror	r24
 65a:	96 95       	lsr	r25
 65c:	87 95       	ror	r24
 65e:	96 95       	lsr	r25
 660:	87 95       	ror	r24
 662:	80 5d       	subi	r24, 0xD0	; 208
 664:	6e de       	rcall	.-804    	; 0x342 <LCD_WriteData>
 666:	40 91 fc 01 	lds	r20, 0x01FC
 66a:	50 91 fd 01 	lds	r21, 0x01FD
 66e:	9a 01       	movw	r18, r20
 670:	ad ec       	ldi	r26, 0xCD	; 205
 672:	bc ec       	ldi	r27, 0xCC	; 204
 674:	9b d3       	rcall	.+1846   	; 0xdac <__umulhisi3>
 676:	96 95       	lsr	r25
 678:	87 95       	ror	r24
 67a:	96 95       	lsr	r25
 67c:	87 95       	ror	r24
 67e:	96 95       	lsr	r25
 680:	87 95       	ror	r24
 682:	9c 01       	movw	r18, r24
 684:	22 0f       	add	r18, r18
 686:	33 1f       	adc	r19, r19
 688:	88 0f       	add	r24, r24
 68a:	99 1f       	adc	r25, r25
 68c:	88 0f       	add	r24, r24
 68e:	99 1f       	adc	r25, r25
 690:	88 0f       	add	r24, r24
 692:	99 1f       	adc	r25, r25
 694:	82 0f       	add	r24, r18
 696:	93 1f       	adc	r25, r19
 698:	9a 01       	movw	r18, r20
 69a:	28 1b       	sub	r18, r24
 69c:	39 0b       	sbc	r19, r25
 69e:	c9 01       	movw	r24, r18
 6a0:	80 5d       	subi	r24, 0xD0	; 208
 6a2:	4f de       	rcall	.-866    	; 0x342 <LCD_WriteData>
 6a4:	8a e0       	ldi	r24, 0x0A	; 10
 6a6:	36 de       	rcall	.-916    	; 0x314 <LCD_Cursor>
 6a8:	e0 91 02 02 	lds	r30, 0x0202
 6ac:	f0 91 03 02 	lds	r31, 0x0203
 6b0:	ee 0f       	add	r30, r30
 6b2:	ff 1f       	adc	r31, r31
 6b4:	ee 5b       	subi	r30, 0xBE	; 190
 6b6:	fe 4f       	sbci	r31, 0xFE	; 254
 6b8:	40 81       	ld	r20, Z
 6ba:	51 81       	ldd	r21, Z+1	; 0x01
 6bc:	9a 01       	movw	r18, r20
 6be:	36 95       	lsr	r19
 6c0:	27 95       	ror	r18
 6c2:	36 95       	lsr	r19
 6c4:	27 95       	ror	r18
 6c6:	36 95       	lsr	r19
 6c8:	27 95       	ror	r18
 6ca:	a5 ec       	ldi	r26, 0xC5	; 197
 6cc:	b0 e2       	ldi	r27, 0x20	; 32
 6ce:	6e d3       	rcall	.+1756   	; 0xdac <__umulhisi3>
 6d0:	92 95       	swap	r25
 6d2:	82 95       	swap	r24
 6d4:	8f 70       	andi	r24, 0x0F	; 15
 6d6:	89 27       	eor	r24, r25
 6d8:	9f 70       	andi	r25, 0x0F	; 15
 6da:	89 27       	eor	r24, r25
 6dc:	8c 9f       	mul	r24, r28
 6de:	90 01       	movw	r18, r0
 6e0:	8d 9f       	mul	r24, r29
 6e2:	30 0d       	add	r19, r0
 6e4:	9c 9f       	mul	r25, r28
 6e6:	30 0d       	add	r19, r0
 6e8:	11 24       	eor	r1, r1
 6ea:	42 1b       	sub	r20, r18
 6ec:	53 0b       	sbc	r21, r19
 6ee:	9a 01       	movw	r18, r20
 6f0:	36 95       	lsr	r19
 6f2:	27 95       	ror	r18
 6f4:	36 95       	lsr	r19
 6f6:	27 95       	ror	r18
 6f8:	ab e7       	ldi	r26, 0x7B	; 123
 6fa:	b4 e1       	ldi	r27, 0x14	; 20
 6fc:	57 d3       	rcall	.+1710   	; 0xdac <__umulhisi3>
 6fe:	96 95       	lsr	r25
 700:	87 95       	ror	r24
 702:	80 5d       	subi	r24, 0xD0	; 208
 704:	1e de       	rcall	.-964    	; 0x342 <LCD_WriteData>
 706:	e0 91 02 02 	lds	r30, 0x0202
 70a:	f0 91 03 02 	lds	r31, 0x0203
 70e:	ee 0f       	add	r30, r30
 710:	ff 1f       	adc	r31, r31
 712:	ee 5b       	subi	r30, 0xBE	; 190
 714:	fe 4f       	sbci	r31, 0xFE	; 254
 716:	40 81       	ld	r20, Z
 718:	51 81       	ldd	r21, Z+1	; 0x01
 71a:	9a 01       	movw	r18, r20
 71c:	36 95       	lsr	r19
 71e:	27 95       	ror	r18
 720:	36 95       	lsr	r19
 722:	27 95       	ror	r18
 724:	ab e7       	ldi	r26, 0x7B	; 123
 726:	b4 e1       	ldi	r27, 0x14	; 20
 728:	41 d3       	rcall	.+1666   	; 0xdac <__umulhisi3>
 72a:	96 95       	lsr	r25
 72c:	87 95       	ror	r24
 72e:	18 9f       	mul	r17, r24
 730:	90 01       	movw	r18, r0
 732:	19 9f       	mul	r17, r25
 734:	30 0d       	add	r19, r0
 736:	11 24       	eor	r1, r1
 738:	ca 01       	movw	r24, r20
 73a:	82 1b       	sub	r24, r18
 73c:	93 0b       	sbc	r25, r19
 73e:	9c 01       	movw	r18, r24
 740:	ad ec       	ldi	r26, 0xCD	; 205
 742:	bc ec       	ldi	r27, 0xCC	; 204
 744:	33 d3       	rcall	.+1638   	; 0xdac <__umulhisi3>
 746:	96 95       	lsr	r25
 748:	87 95       	ror	r24
 74a:	96 95       	lsr	r25
 74c:	87 95       	ror	r24
 74e:	96 95       	lsr	r25
 750:	87 95       	ror	r24
 752:	80 5d       	subi	r24, 0xD0	; 208
 754:	f6 dd       	rcall	.-1044   	; 0x342 <LCD_WriteData>
 756:	e0 91 02 02 	lds	r30, 0x0202
 75a:	f0 91 03 02 	lds	r31, 0x0203
 75e:	ee 0f       	add	r30, r30
 760:	ff 1f       	adc	r31, r31
 762:	ee 5b       	subi	r30, 0xBE	; 190
 764:	fe 4f       	sbci	r31, 0xFE	; 254
 766:	40 81       	ld	r20, Z
 768:	51 81       	ldd	r21, Z+1	; 0x01
 76a:	9a 01       	movw	r18, r20
 76c:	ad ec       	ldi	r26, 0xCD	; 205
 76e:	bc ec       	ldi	r27, 0xCC	; 204
 770:	1d d3       	rcall	.+1594   	; 0xdac <__umulhisi3>
 772:	96 95       	lsr	r25
 774:	87 95       	ror	r24
 776:	96 95       	lsr	r25
 778:	87 95       	ror	r24
 77a:	96 95       	lsr	r25
 77c:	87 95       	ror	r24
 77e:	9c 01       	movw	r18, r24
 780:	22 0f       	add	r18, r18
 782:	33 1f       	adc	r19, r19
 784:	88 0f       	add	r24, r24
 786:	99 1f       	adc	r25, r25
 788:	88 0f       	add	r24, r24
 78a:	99 1f       	adc	r25, r25
 78c:	88 0f       	add	r24, r24
 78e:	99 1f       	adc	r25, r25
 790:	82 0f       	add	r24, r18
 792:	93 1f       	adc	r25, r19
 794:	9a 01       	movw	r18, r20
 796:	28 1b       	sub	r18, r24
 798:	39 0b       	sbc	r19, r25
 79a:	c9 01       	movw	r24, r18
 79c:	80 5d       	subi	r24, 0xD0	; 208
 79e:	d1 dd       	rcall	.-1118   	; 0x342 <LCD_WriteData>
 7a0:	81 e1       	ldi	r24, 0x11	; 17
 7a2:	b8 dd       	rcall	.-1168   	; 0x314 <LCD_Cursor>
 7a4:	40 91 fe 01 	lds	r20, 0x01FE
 7a8:	50 91 ff 01 	lds	r21, 0x01FF
 7ac:	9a 01       	movw	r18, r20
 7ae:	36 95       	lsr	r19
 7b0:	27 95       	ror	r18
 7b2:	36 95       	lsr	r19
 7b4:	27 95       	ror	r18
 7b6:	36 95       	lsr	r19
 7b8:	27 95       	ror	r18
 7ba:	a5 ec       	ldi	r26, 0xC5	; 197
 7bc:	b0 e2       	ldi	r27, 0x20	; 32
 7be:	f6 d2       	rcall	.+1516   	; 0xdac <__umulhisi3>
 7c0:	92 95       	swap	r25
 7c2:	82 95       	swap	r24
 7c4:	8f 70       	andi	r24, 0x0F	; 15
 7c6:	89 27       	eor	r24, r25
 7c8:	9f 70       	andi	r25, 0x0F	; 15
 7ca:	89 27       	eor	r24, r25
 7cc:	8c 9f       	mul	r24, r28
 7ce:	90 01       	movw	r18, r0
 7d0:	8d 9f       	mul	r24, r29
 7d2:	30 0d       	add	r19, r0
 7d4:	9c 9f       	mul	r25, r28
 7d6:	30 0d       	add	r19, r0
 7d8:	11 24       	eor	r1, r1
 7da:	42 1b       	sub	r20, r18
 7dc:	53 0b       	sbc	r21, r19
 7de:	9a 01       	movw	r18, r20
 7e0:	36 95       	lsr	r19
 7e2:	27 95       	ror	r18
 7e4:	36 95       	lsr	r19
 7e6:	27 95       	ror	r18
 7e8:	ab e7       	ldi	r26, 0x7B	; 123
 7ea:	b4 e1       	ldi	r27, 0x14	; 20
 7ec:	df d2       	rcall	.+1470   	; 0xdac <__umulhisi3>
 7ee:	96 95       	lsr	r25
 7f0:	87 95       	ror	r24
 7f2:	80 5d       	subi	r24, 0xD0	; 208
 7f4:	a6 dd       	rcall	.-1204   	; 0x342 <LCD_WriteData>
 7f6:	40 91 fe 01 	lds	r20, 0x01FE
 7fa:	50 91 ff 01 	lds	r21, 0x01FF
 7fe:	9a 01       	movw	r18, r20
 800:	36 95       	lsr	r19
 802:	27 95       	ror	r18
 804:	36 95       	lsr	r19
 806:	27 95       	ror	r18
 808:	ab e7       	ldi	r26, 0x7B	; 123
 80a:	b4 e1       	ldi	r27, 0x14	; 20
 80c:	cf d2       	rcall	.+1438   	; 0xdac <__umulhisi3>
 80e:	96 95       	lsr	r25
 810:	87 95       	ror	r24
 812:	18 9f       	mul	r17, r24
 814:	90 01       	movw	r18, r0
 816:	19 9f       	mul	r17, r25
 818:	30 0d       	add	r19, r0
 81a:	11 24       	eor	r1, r1
 81c:	ca 01       	movw	r24, r20
 81e:	82 1b       	sub	r24, r18
 820:	93 0b       	sbc	r25, r19
 822:	9c 01       	movw	r18, r24
 824:	ad ec       	ldi	r26, 0xCD	; 205
 826:	bc ec       	ldi	r27, 0xCC	; 204
 828:	c1 d2       	rcall	.+1410   	; 0xdac <__umulhisi3>
 82a:	96 95       	lsr	r25
 82c:	87 95       	ror	r24
 82e:	96 95       	lsr	r25
 830:	87 95       	ror	r24
 832:	96 95       	lsr	r25
 834:	87 95       	ror	r24
 836:	80 5d       	subi	r24, 0xD0	; 208
 838:	84 dd       	rcall	.-1272   	; 0x342 <LCD_WriteData>
 83a:	40 91 fe 01 	lds	r20, 0x01FE
 83e:	50 91 ff 01 	lds	r21, 0x01FF
 842:	9a 01       	movw	r18, r20
 844:	ad ec       	ldi	r26, 0xCD	; 205
 846:	bc ec       	ldi	r27, 0xCC	; 204
 848:	b1 d2       	rcall	.+1378   	; 0xdac <__umulhisi3>
 84a:	96 95       	lsr	r25
 84c:	87 95       	ror	r24
 84e:	96 95       	lsr	r25
 850:	87 95       	ror	r24
 852:	96 95       	lsr	r25
 854:	87 95       	ror	r24
 856:	9c 01       	movw	r18, r24
 858:	22 0f       	add	r18, r18
 85a:	33 1f       	adc	r19, r19
 85c:	88 0f       	add	r24, r24
 85e:	99 1f       	adc	r25, r25
 860:	88 0f       	add	r24, r24
 862:	99 1f       	adc	r25, r25
 864:	88 0f       	add	r24, r24
 866:	99 1f       	adc	r25, r25
 868:	82 0f       	add	r24, r18
 86a:	93 1f       	adc	r25, r19
 86c:	9a 01       	movw	r18, r20
 86e:	28 1b       	sub	r18, r24
 870:	39 0b       	sbc	r19, r25
 872:	c9 01       	movw	r24, r18
 874:	80 5d       	subi	r24, 0xD0	; 208
 876:	65 dd       	rcall	.-1334   	; 0x342 <LCD_WriteData>
 878:	81 e2       	ldi	r24, 0x21	; 33
 87a:	4c dd       	rcall	.-1384   	; 0x314 <LCD_Cursor>
 87c:	90 c0       	rjmp	.+288    	; 0x99e <SM1Menu+0x61e>
 87e:	47 dd       	rcall	.-1394   	; 0x30e <LCD_ClearScreen>
 880:	8e c0       	rjmp	.+284    	; 0x99e <SM1Menu+0x61e>
 882:	81 e0       	ldi	r24, 0x01	; 1
 884:	47 dd       	rcall	.-1394   	; 0x314 <LCD_Cursor>
 886:	68 e9       	ldi	r22, 0x98	; 152
 888:	71 e0       	ldi	r23, 0x01	; 1
 88a:	81 e0       	ldi	r24, 0x01	; 1
 88c:	63 dd       	rcall	.-1338   	; 0x354 <LCD_DisplayString>
 88e:	6f e8       	ldi	r22, 0x8F	; 143
 890:	71 e0       	ldi	r23, 0x01	; 1
 892:	81 e1       	ldi	r24, 0x11	; 17
 894:	5f dd       	rcall	.-1346   	; 0x354 <LCD_DisplayString>
 896:	89 e1       	ldi	r24, 0x19	; 25
 898:	3d dd       	rcall	.-1414   	; 0x314 <LCD_Cursor>
 89a:	40 91 fe 01 	lds	r20, 0x01FE
 89e:	50 91 ff 01 	lds	r21, 0x01FF
 8a2:	9a 01       	movw	r18, r20
 8a4:	36 95       	lsr	r19
 8a6:	27 95       	ror	r18
 8a8:	36 95       	lsr	r19
 8aa:	27 95       	ror	r18
 8ac:	36 95       	lsr	r19
 8ae:	27 95       	ror	r18
 8b0:	a5 ec       	ldi	r26, 0xC5	; 197
 8b2:	b0 e2       	ldi	r27, 0x20	; 32
 8b4:	7b d2       	rcall	.+1270   	; 0xdac <__umulhisi3>
 8b6:	92 95       	swap	r25
 8b8:	82 95       	swap	r24
 8ba:	8f 70       	andi	r24, 0x0F	; 15
 8bc:	89 27       	eor	r24, r25
 8be:	9f 70       	andi	r25, 0x0F	; 15
 8c0:	89 27       	eor	r24, r25
 8c2:	68 ee       	ldi	r22, 0xE8	; 232
 8c4:	73 e0       	ldi	r23, 0x03	; 3
 8c6:	86 9f       	mul	r24, r22
 8c8:	90 01       	movw	r18, r0
 8ca:	87 9f       	mul	r24, r23
 8cc:	30 0d       	add	r19, r0
 8ce:	96 9f       	mul	r25, r22
 8d0:	30 0d       	add	r19, r0
 8d2:	11 24       	eor	r1, r1
 8d4:	42 1b       	sub	r20, r18
 8d6:	53 0b       	sbc	r21, r19
 8d8:	9a 01       	movw	r18, r20
 8da:	36 95       	lsr	r19
 8dc:	27 95       	ror	r18
 8de:	36 95       	lsr	r19
 8e0:	27 95       	ror	r18
 8e2:	ab e7       	ldi	r26, 0x7B	; 123
 8e4:	b4 e1       	ldi	r27, 0x14	; 20
 8e6:	62 d2       	rcall	.+1220   	; 0xdac <__umulhisi3>
 8e8:	96 95       	lsr	r25
 8ea:	87 95       	ror	r24
 8ec:	80 5d       	subi	r24, 0xD0	; 208
 8ee:	29 dd       	rcall	.-1454   	; 0x342 <LCD_WriteData>
 8f0:	40 91 fe 01 	lds	r20, 0x01FE
 8f4:	50 91 ff 01 	lds	r21, 0x01FF
 8f8:	9a 01       	movw	r18, r20
 8fa:	36 95       	lsr	r19
 8fc:	27 95       	ror	r18
 8fe:	36 95       	lsr	r19
 900:	27 95       	ror	r18
 902:	ab e7       	ldi	r26, 0x7B	; 123
 904:	b4 e1       	ldi	r27, 0x14	; 20
 906:	52 d2       	rcall	.+1188   	; 0xdac <__umulhisi3>
 908:	96 95       	lsr	r25
 90a:	87 95       	ror	r24
 90c:	64 e6       	ldi	r22, 0x64	; 100
 90e:	68 9f       	mul	r22, r24
 910:	90 01       	movw	r18, r0
 912:	69 9f       	mul	r22, r25
 914:	30 0d       	add	r19, r0
 916:	11 24       	eor	r1, r1
 918:	ca 01       	movw	r24, r20
 91a:	82 1b       	sub	r24, r18
 91c:	93 0b       	sbc	r25, r19
 91e:	9c 01       	movw	r18, r24
 920:	ad ec       	ldi	r26, 0xCD	; 205
 922:	bc ec       	ldi	r27, 0xCC	; 204
 924:	43 d2       	rcall	.+1158   	; 0xdac <__umulhisi3>
 926:	96 95       	lsr	r25
 928:	87 95       	ror	r24
 92a:	96 95       	lsr	r25
 92c:	87 95       	ror	r24
 92e:	96 95       	lsr	r25
 930:	87 95       	ror	r24
 932:	80 5d       	subi	r24, 0xD0	; 208
 934:	06 dd       	rcall	.-1524   	; 0x342 <LCD_WriteData>
 936:	40 91 fe 01 	lds	r20, 0x01FE
 93a:	50 91 ff 01 	lds	r21, 0x01FF
 93e:	9a 01       	movw	r18, r20
 940:	ad ec       	ldi	r26, 0xCD	; 205
 942:	bc ec       	ldi	r27, 0xCC	; 204
 944:	33 d2       	rcall	.+1126   	; 0xdac <__umulhisi3>
 946:	96 95       	lsr	r25
 948:	87 95       	ror	r24
 94a:	96 95       	lsr	r25
 94c:	87 95       	ror	r24
 94e:	96 95       	lsr	r25
 950:	87 95       	ror	r24
 952:	9c 01       	movw	r18, r24
 954:	22 0f       	add	r18, r18
 956:	33 1f       	adc	r19, r19
 958:	88 0f       	add	r24, r24
 95a:	99 1f       	adc	r25, r25
 95c:	88 0f       	add	r24, r24
 95e:	99 1f       	adc	r25, r25
 960:	88 0f       	add	r24, r24
 962:	99 1f       	adc	r25, r25
 964:	82 0f       	add	r24, r18
 966:	93 1f       	adc	r25, r19
 968:	9a 01       	movw	r18, r20
 96a:	28 1b       	sub	r18, r24
 96c:	39 0b       	sbc	r19, r25
 96e:	c9 01       	movw	r24, r18
 970:	80 5d       	subi	r24, 0xD0	; 208
 972:	e7 dc       	rcall	.-1586   	; 0x342 <LCD_WriteData>
 974:	81 e2       	ldi	r24, 0x21	; 33
 976:	ce dc       	rcall	.-1636   	; 0x314 <LCD_Cursor>
 978:	12 c0       	rjmp	.+36     	; 0x99e <SM1Menu+0x61e>
 97a:	c9 dc       	rcall	.-1646   	; 0x30e <LCD_ClearScreen>
 97c:	10 c0       	rjmp	.+32     	; 0x99e <SM1Menu+0x61e>
 97e:	10 92 05 02 	sts	0x0205, r1
 982:	10 92 04 02 	sts	0x0204, r1
 986:	10 92 03 02 	sts	0x0203, r1
 98a:	10 92 02 02 	sts	0x0202, r1
 98e:	10 92 01 02 	sts	0x0201, r1
 992:	10 92 00 02 	sts	0x0200, r1
 996:	10 92 ff 01 	sts	0x01FF, r1
 99a:	10 92 fe 01 	sts	0x01FE, r1
 99e:	df 91       	pop	r29
 9a0:	cf 91       	pop	r28
 9a2:	1f 91       	pop	r17
 9a4:	08 95       	ret

000009a6 <initUSART>:
 9a6:	e1 ec       	ldi	r30, 0xC1	; 193
 9a8:	f0 e0       	ldi	r31, 0x00	; 0
 9aa:	80 81       	ld	r24, Z
 9ac:	88 61       	ori	r24, 0x18	; 24
 9ae:	80 83       	st	Z, r24
 9b0:	e2 ec       	ldi	r30, 0xC2	; 194
 9b2:	f0 e0       	ldi	r31, 0x00	; 0
 9b4:	80 81       	ld	r24, Z
 9b6:	86 60       	ori	r24, 0x06	; 6
 9b8:	80 83       	st	Z, r24
 9ba:	83 e3       	ldi	r24, 0x33	; 51
 9bc:	80 93 c4 00 	sts	0x00C4, r24
 9c0:	10 92 c5 00 	sts	0x00C5, r1
 9c4:	08 95       	ret

000009c6 <USART_Receive>:
 9c6:	e0 ec       	ldi	r30, 0xC0	; 192
 9c8:	f0 e0       	ldi	r31, 0x00	; 0
 9ca:	80 81       	ld	r24, Z
 9cc:	88 23       	and	r24, r24
 9ce:	ec f7       	brge	.-6      	; 0x9ca <USART_Receive+0x4>
 9d0:	80 91 c6 00 	lds	r24, 0x00C6
 9d4:	08 95       	ret

000009d6 <serial_input>:
 9d6:	80 91 c0 00 	lds	r24, 0x00C0
 9da:	88 23       	and	r24, r24
 9dc:	cc f4       	brge	.+50     	; 0xa10 <serial_input+0x3a>
 9de:	f3 df       	rcall	.-26     	; 0x9c6 <USART_Receive>
 9e0:	80 93 0a 02 	sts	0x020A, r24
 9e4:	f0 df       	rcall	.-32     	; 0x9c6 <USART_Receive>
 9e6:	80 93 09 02 	sts	0x0209, r24
 9ea:	20 91 0a 02 	lds	r18, 0x020A
 9ee:	30 e0       	ldi	r19, 0x00	; 0
 9f0:	81 11       	cpse	r24, r1
 9f2:	05 c0       	rjmp	.+10     	; 0x9fe <serial_input+0x28>
 9f4:	30 93 0c 02 	sts	0x020C, r19
 9f8:	20 93 0b 02 	sts	0x020B, r18
 9fc:	08 95       	ret
 9fe:	90 e0       	ldi	r25, 0x00	; 0
 a00:	98 2f       	mov	r25, r24
 a02:	88 27       	eor	r24, r24
 a04:	28 0f       	add	r18, r24
 a06:	39 1f       	adc	r19, r25
 a08:	30 93 0c 02 	sts	0x020C, r19
 a0c:	20 93 0b 02 	sts	0x020B, r18
 a10:	08 95       	ret

00000a12 <init_LED_matrix>:
 a12:	38 e0       	ldi	r19, 0x08	; 8
 a14:	40 e0       	ldi	r20, 0x00	; 0
 a16:	08 c0       	rjmp	.+16     	; 0xa28 <init_LED_matrix+0x16>
 a18:	11 92       	st	Z+, r1
 a1a:	2f 5f       	subi	r18, 0xFF	; 255
 a1c:	28 30       	cpi	r18, 0x08	; 8
 a1e:	e1 f7       	brne	.-8      	; 0xa18 <init_LED_matrix+0x6>
 a20:	31 50       	subi	r19, 0x01	; 1
 a22:	08 96       	adiw	r24, 0x08	; 8
 a24:	33 23       	and	r19, r19
 a26:	19 f0       	breq	.+6      	; 0xa2e <init_LED_matrix+0x1c>
 a28:	fc 01       	movw	r30, r24
 a2a:	24 2f       	mov	r18, r20
 a2c:	f5 cf       	rjmp	.-22     	; 0xa18 <init_LED_matrix+0x6>
 a2e:	08 95       	ret

00000a30 <transmit_data2>:
 a30:	20 e0       	ldi	r18, 0x00	; 0
 a32:	30 e0       	ldi	r19, 0x00	; 0
 a34:	90 e0       	ldi	r25, 0x00	; 0
 a36:	80 95       	com	r24
 a38:	90 95       	com	r25
 a3a:	15 b8       	out	0x05, r1	; 5
 a3c:	e5 b1       	in	r30, 0x05	; 5
 a3e:	bc 01       	movw	r22, r24
 a40:	02 2e       	mov	r0, r18
 a42:	02 c0       	rjmp	.+4      	; 0xa48 <transmit_data2+0x18>
 a44:	75 95       	asr	r23
 a46:	67 95       	ror	r22
 a48:	0a 94       	dec	r0
 a4a:	e2 f7       	brpl	.-8      	; 0xa44 <transmit_data2+0x14>
 a4c:	ab 01       	movw	r20, r22
 a4e:	44 0f       	add	r20, r20
 a50:	55 1f       	adc	r21, r21
 a52:	44 0f       	add	r20, r20
 a54:	55 1f       	adc	r21, r21
 a56:	44 0f       	add	r20, r20
 a58:	55 1f       	adc	r21, r21
 a5a:	48 70       	andi	r20, 0x08	; 8
 a5c:	4e 2b       	or	r20, r30
 a5e:	45 b9       	out	0x05, r20	; 5
 a60:	2d 9a       	sbi	0x05, 5	; 5
 a62:	2f 5f       	subi	r18, 0xFF	; 255
 a64:	3f 4f       	sbci	r19, 0xFF	; 255
 a66:	28 30       	cpi	r18, 0x08	; 8
 a68:	31 05       	cpc	r19, r1
 a6a:	39 f7       	brne	.-50     	; 0xa3a <transmit_data2+0xa>
 a6c:	2c 9a       	sbi	0x05, 4	; 5
 a6e:	08 95       	ret

00000a70 <transmit_data>:
 a70:	ff 92       	push	r15
 a72:	0f 93       	push	r16
 a74:	1f 93       	push	r17
 a76:	cf 93       	push	r28
 a78:	df 93       	push	r29
 a7a:	f6 2e       	mov	r15, r22
 a7c:	c0 e0       	ldi	r28, 0x00	; 0
 a7e:	d0 e0       	ldi	r29, 0x00	; 0
 a80:	08 2f       	mov	r16, r24
 a82:	10 e0       	ldi	r17, 0x00	; 0
 a84:	8f 2d       	mov	r24, r15
 a86:	d4 df       	rcall	.-88     	; 0xa30 <transmit_data2>
 a88:	15 b8       	out	0x05, r1	; 5
 a8a:	95 b1       	in	r25, 0x05	; 5
 a8c:	98 01       	movw	r18, r16
 a8e:	0c 2e       	mov	r0, r28
 a90:	02 c0       	rjmp	.+4      	; 0xa96 <transmit_data+0x26>
 a92:	35 95       	asr	r19
 a94:	27 95       	ror	r18
 a96:	0a 94       	dec	r0
 a98:	e2 f7       	brpl	.-8      	; 0xa92 <transmit_data+0x22>
 a9a:	21 70       	andi	r18, 0x01	; 1
 a9c:	29 2b       	or	r18, r25
 a9e:	25 b9       	out	0x05, r18	; 5
 aa0:	2a 9a       	sbi	0x05, 2	; 5
 aa2:	21 96       	adiw	r28, 0x01	; 1
 aa4:	c8 30       	cpi	r28, 0x08	; 8
 aa6:	d1 05       	cpc	r29, r1
 aa8:	69 f7       	brne	.-38     	; 0xa84 <transmit_data+0x14>
 aaa:	29 9a       	sbi	0x05, 1	; 5
 aac:	df 91       	pop	r29
 aae:	cf 91       	pop	r28
 ab0:	1f 91       	pop	r17
 ab2:	0f 91       	pop	r16
 ab4:	ff 90       	pop	r15
 ab6:	08 95       	ret

00000ab8 <LED_matrix2>:
 ab8:	20 91 08 02 	lds	r18, 0x0208
 abc:	28 30       	cpi	r18, 0x08	; 8
 abe:	10 f0       	brcs	.+4      	; 0xac4 <LED_matrix2+0xc>
 ac0:	10 92 08 02 	sts	0x0208, r1
 ac4:	10 92 07 02 	sts	0x0207, r1
 ac8:	20 91 08 02 	lds	r18, 0x0208
 acc:	fc 01       	movw	r30, r24
 ace:	38 e0       	ldi	r19, 0x08	; 8
 ad0:	23 9f       	mul	r18, r19
 ad2:	e0 0d       	add	r30, r0
 ad4:	f1 1d       	adc	r31, r1
 ad6:	11 24       	eor	r1, r1
 ad8:	20 e0       	ldi	r18, 0x00	; 0
 ada:	30 e0       	ldi	r19, 0x00	; 0
 adc:	81 91       	ld	r24, Z+
 ade:	90 e0       	ldi	r25, 0x00	; 0
 ae0:	02 2e       	mov	r0, r18
 ae2:	02 c0       	rjmp	.+4      	; 0xae8 <LED_matrix2+0x30>
 ae4:	88 0f       	add	r24, r24
 ae6:	99 1f       	adc	r25, r25
 ae8:	0a 94       	dec	r0
 aea:	e2 f7       	brpl	.-8      	; 0xae4 <LED_matrix2+0x2c>
 aec:	90 91 07 02 	lds	r25, 0x0207
 af0:	69 2f       	mov	r22, r25
 af2:	68 2b       	or	r22, r24
 af4:	60 93 07 02 	sts	0x0207, r22
 af8:	2f 5f       	subi	r18, 0xFF	; 255
 afa:	3f 4f       	sbci	r19, 0xFF	; 255
 afc:	28 30       	cpi	r18, 0x08	; 8
 afe:	31 05       	cpc	r19, r1
 b00:	69 f7       	brne	.-38     	; 0xadc <LED_matrix2+0x24>
 b02:	21 e0       	ldi	r18, 0x01	; 1
 b04:	30 e0       	ldi	r19, 0x00	; 0
 b06:	00 90 08 02 	lds	r0, 0x0208
 b0a:	02 c0       	rjmp	.+4      	; 0xb10 <LED_matrix2+0x58>
 b0c:	22 0f       	add	r18, r18
 b0e:	33 1f       	adc	r19, r19
 b10:	0a 94       	dec	r0
 b12:	e2 f7       	brpl	.-8      	; 0xb0c <LED_matrix2+0x54>
 b14:	82 2f       	mov	r24, r18
 b16:	ac df       	rcall	.-168    	; 0xa70 <transmit_data>
 b18:	80 91 08 02 	lds	r24, 0x0208
 b1c:	8f 5f       	subi	r24, 0xFF	; 255
 b1e:	80 93 08 02 	sts	0x0208, r24
 b22:	08 95       	ret

00000b24 <SM4LEDMatrix>:
 b24:	80 91 05 02 	lds	r24, 0x0205
 b28:	81 30       	cpi	r24, 0x01	; 1
 b2a:	29 f0       	breq	.+10     	; 0xb36 <SM4LEDMatrix+0x12>
 b2c:	80 91 04 02 	lds	r24, 0x0204
 b30:	81 30       	cpi	r24, 0x01	; 1
 b32:	09 f0       	breq	.+2      	; 0xb36 <SM4LEDMatrix+0x12>
 b34:	40 c0       	rjmp	.+128    	; 0xbb6 <SM4LEDMatrix+0x92>
 b36:	e0 91 02 02 	lds	r30, 0x0202
 b3a:	f0 91 03 02 	lds	r31, 0x0203
 b3e:	ee 0f       	add	r30, r30
 b40:	ff 1f       	adc	r31, r31
 b42:	ee 5b       	subi	r30, 0xBE	; 190
 b44:	fe 4f       	sbci	r31, 0xFE	; 254
 b46:	40 81       	ld	r20, Z
 b48:	51 81       	ldd	r21, Z+1	; 0x01
 b4a:	a6 e7       	ldi	r26, 0x76	; 118
 b4c:	b1 e0       	ldi	r27, 0x01	; 1
 b4e:	e3 e2       	ldi	r30, 0x23	; 35
 b50:	f2 e0       	ldi	r31, 0x02	; 2
 b52:	26 e8       	ldi	r18, 0x86	; 134
 b54:	31 e0       	ldi	r19, 0x01	; 1
 b56:	61 e0       	ldi	r22, 0x01	; 1
 b58:	8d 91       	ld	r24, X+
 b5a:	9d 91       	ld	r25, X+
 b5c:	48 17       	cp	r20, r24
 b5e:	59 07       	cpc	r21, r25
 b60:	11 f4       	brne	.+4      	; 0xb66 <SM4LEDMatrix+0x42>
 b62:	60 83       	st	Z, r22
 b64:	01 c0       	rjmp	.+2      	; 0xb68 <SM4LEDMatrix+0x44>
 b66:	10 82       	st	Z, r1
 b68:	31 97       	sbiw	r30, 0x01	; 1
 b6a:	a2 17       	cp	r26, r18
 b6c:	b3 07       	cpc	r27, r19
 b6e:	a1 f7       	brne	.-24     	; 0xb58 <SM4LEDMatrix+0x34>
 b70:	20 91 fe 01 	lds	r18, 0x01FE
 b74:	30 91 ff 01 	lds	r19, 0x01FF
 b78:	21 15       	cp	r18, r1
 b7a:	31 05       	cpc	r19, r1
 b7c:	c9 f0       	breq	.+50     	; 0xbb0 <SM4LEDMatrix+0x8c>
 b7e:	81 e0       	ldi	r24, 0x01	; 1
 b80:	80 93 54 02 	sts	0x0254, r24
 b84:	ad ec       	ldi	r26, 0xCD	; 205
 b86:	bc ec       	ldi	r27, 0xCC	; 204
 b88:	11 d1       	rcall	.+546    	; 0xdac <__umulhisi3>
 b8a:	96 95       	lsr	r25
 b8c:	87 95       	ror	r24
 b8e:	96 95       	lsr	r25
 b90:	87 95       	ror	r24
 b92:	96 95       	lsr	r25
 b94:	87 95       	ror	r24
 b96:	00 97       	sbiw	r24, 0x00	; 0
 b98:	59 f0       	breq	.+22     	; 0xbb0 <SM4LEDMatrix+0x8c>
 b9a:	e4 e5       	ldi	r30, 0x54	; 84
 b9c:	f2 e0       	ldi	r31, 0x02	; 2
 b9e:	9f 01       	movw	r18, r30
 ba0:	28 1b       	sub	r18, r24
 ba2:	39 0b       	sbc	r19, r25
 ba4:	c9 01       	movw	r24, r18
 ba6:	21 e0       	ldi	r18, 0x01	; 1
 ba8:	22 93       	st	-Z, r18
 baa:	e8 17       	cp	r30, r24
 bac:	f9 07       	cpc	r31, r25
 bae:	e1 f7       	brne	.-8      	; 0xba8 <SM4LEDMatrix+0x84>
 bb0:	84 e1       	ldi	r24, 0x14	; 20
 bb2:	92 e0       	ldi	r25, 0x02	; 2
 bb4:	81 cf       	rjmp	.-254    	; 0xab8 <LED_matrix2>
 bb6:	08 95       	ret

00000bb8 <main>:

//End of State Machines


int main(void)
{
 bb8:	cf 93       	push	r28
 bba:	df 93       	push	r29
 bbc:	cd b7       	in	r28, 0x3d	; 61
 bbe:	de b7       	in	r29, 0x3e	; 62
 bc0:	28 97       	sbiw	r28, 0x08	; 8
 bc2:	0f b6       	in	r0, 0x3f	; 63
 bc4:	f8 94       	cli
 bc6:	de bf       	out	0x3e, r29	; 62
 bc8:	0f be       	out	0x3f, r0	; 63
 bca:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0x0F; PORTA = 0xF0;
 bcc:	8f e0       	ldi	r24, 0x0F	; 15
 bce:	81 b9       	out	0x01, r24	; 1
 bd0:	80 ef       	ldi	r24, 0xF0	; 240
 bd2:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
 bd4:	1f ef       	ldi	r17, 0xFF	; 255
 bd6:	14 b9       	out	0x04, r17	; 4
 bd8:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00;
 bda:	17 b9       	out	0x07, r17	; 7
 bdc:	18 b8       	out	0x08, r1	; 8
	DDRD = 0x00; PORTD = 0xFF;
 bde:	1a b8       	out	0x0a, r1	; 10
 be0:	1b b9       	out	0x0b, r17	; 11
	
	//Initiate LCD
	LCD_init();
 be2:	a0 db       	rcall	.-2240   	; 0x324 <LCD_init>
	LCD_ClearScreen();
 be4:	94 db       	rcall	.-2264   	; 0x30e <LCD_ClearScreen>
	
	//Initiate USART
	initUSART();
 be6:	df de       	rcall	.-578    	; 0x9a6 <initUSART>
	
	//Initiate LED Matrix
	init_LED_matrix(LED_matrix_pos);
 be8:	84 e1       	ldi	r24, 0x14	; 20
 bea:	92 e0       	ldi	r25, 0x02	; 2
 bec:	12 df       	rcall	.-476    	; 0xa12 <init_LED_matrix>
	LED_matrix2(LED_matrix_pos);
 bee:	84 e1       	ldi	r24, 0x14	; 20
 bf0:	92 e0       	ldi	r25, 0x02	; 2
 bf2:	62 df       	rcall	.-316    	; 0xab8 <LED_matrix2>
	
	SM1_state = SM1_init;
 bf4:	10 92 13 02 	sts	0x0213, r1
	SM2_state = SM2_init;
 bf8:	10 92 12 02 	sts	0x0212, r1
	unsigned long int SMTick3_period = SMTick3_calc/GCD;
	unsigned long int SMTick4_period = SMTick4_calc/GCD;

	//Declare an array of tasks
	static task task1,task2,task3,task4;
	task *tasks[] = { &task1,&task2, &task3, &task4};
 bfc:	88 e0       	ldi	r24, 0x08	; 8
 bfe:	e6 e0       	ldi	r30, 0x06	; 6
 c00:	f1 e0       	ldi	r31, 0x01	; 1
 c02:	de 01       	movw	r26, r28
 c04:	11 96       	adiw	r26, 0x01	; 1
 c06:	01 90       	ld	r0, Z+
 c08:	0d 92       	st	X+, r0
 c0a:	8a 95       	dec	r24
 c0c:	e1 f7       	brne	.-8      	; 0xc06 <main+0x4e>
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);
	// Task 1
	task1.state = -1;
 c0e:	10 93 f1 01 	sts	0x01F1, r17
	task1.period = SMTick1_period;
 c12:	88 ec       	ldi	r24, 0xC8	; 200
 c14:	90 e0       	ldi	r25, 0x00	; 0
 c16:	a0 e0       	ldi	r26, 0x00	; 0
 c18:	b0 e0       	ldi	r27, 0x00	; 0
 c1a:	80 93 f2 01 	sts	0x01F2, r24
 c1e:	90 93 f3 01 	sts	0x01F3, r25
 c22:	a0 93 f4 01 	sts	0x01F4, r26
 c26:	b0 93 f5 01 	sts	0x01F5, r27
	task1.elapsedTime = SMTick1_period;
 c2a:	80 93 f6 01 	sts	0x01F6, r24
 c2e:	90 93 f7 01 	sts	0x01F7, r25
 c32:	a0 93 f8 01 	sts	0x01F8, r26
 c36:	b0 93 f9 01 	sts	0x01F9, r27
	task1.TickFct = &SM1Menu;
 c3a:	80 ec       	ldi	r24, 0xC0	; 192
 c3c:	91 e0       	ldi	r25, 0x01	; 1
 c3e:	90 93 fb 01 	sts	0x01FB, r25
 c42:	80 93 fa 01 	sts	0x01FA, r24
	
	// Task 2
	task2.state = -1;
 c46:	10 93 e6 01 	sts	0x01E6, r17
	task2.period = SMTick2_period;
 c4a:	82 e3       	ldi	r24, 0x32	; 50
 c4c:	90 e0       	ldi	r25, 0x00	; 0
 c4e:	a0 e0       	ldi	r26, 0x00	; 0
 c50:	b0 e0       	ldi	r27, 0x00	; 0
 c52:	80 93 e7 01 	sts	0x01E7, r24
 c56:	90 93 e8 01 	sts	0x01E8, r25
 c5a:	a0 93 e9 01 	sts	0x01E9, r26
 c5e:	b0 93 ea 01 	sts	0x01EA, r27
	task2.elapsedTime = SMTick2_period;
 c62:	80 93 eb 01 	sts	0x01EB, r24
 c66:	90 93 ec 01 	sts	0x01EC, r25
 c6a:	a0 93 ed 01 	sts	0x01ED, r26
 c6e:	b0 93 ee 01 	sts	0x01EE, r27
	task2.TickFct = &SM2Game;
 c72:	80 e8       	ldi	r24, 0x80	; 128
 c74:	90 e0       	ldi	r25, 0x00	; 0
 c76:	90 93 f0 01 	sts	0x01F0, r25
 c7a:	80 93 ef 01 	sts	0x01EF, r24
	
	// Task 3
	task3.state = -1;
 c7e:	10 93 db 01 	sts	0x01DB, r17
	task3.period = SMTick3_period;
 c82:	81 e0       	ldi	r24, 0x01	; 1
 c84:	90 e0       	ldi	r25, 0x00	; 0
 c86:	a0 e0       	ldi	r26, 0x00	; 0
 c88:	b0 e0       	ldi	r27, 0x00	; 0
 c8a:	80 93 dc 01 	sts	0x01DC, r24
 c8e:	90 93 dd 01 	sts	0x01DD, r25
 c92:	a0 93 de 01 	sts	0x01DE, r26
 c96:	b0 93 df 01 	sts	0x01DF, r27
	task3.elapsedTime = SMTick3_period;
 c9a:	80 93 e0 01 	sts	0x01E0, r24
 c9e:	90 93 e1 01 	sts	0x01E1, r25
 ca2:	a0 93 e2 01 	sts	0x01E2, r26
 ca6:	b0 93 e3 01 	sts	0x01E3, r27
	task3.TickFct = &serial_input;
 caa:	2b ee       	ldi	r18, 0xEB	; 235
 cac:	34 e0       	ldi	r19, 0x04	; 4
 cae:	30 93 e5 01 	sts	0x01E5, r19
 cb2:	20 93 e4 01 	sts	0x01E4, r18
	
	// Task 4
	task4.state = -1;
 cb6:	10 93 d0 01 	sts	0x01D0, r17
	task4.period = SMTick4_period;
 cba:	80 93 d1 01 	sts	0x01D1, r24
 cbe:	90 93 d2 01 	sts	0x01D2, r25
 cc2:	a0 93 d3 01 	sts	0x01D3, r26
 cc6:	b0 93 d4 01 	sts	0x01D4, r27
	task4.elapsedTime = SMTick4_period;
 cca:	80 93 d5 01 	sts	0x01D5, r24
 cce:	90 93 d6 01 	sts	0x01D6, r25
 cd2:	a0 93 d7 01 	sts	0x01D7, r26
 cd6:	b0 93 d8 01 	sts	0x01D8, r27
	task4.TickFct = &SM4LEDMatrix;
 cda:	22 e9       	ldi	r18, 0x92	; 146
 cdc:	35 e0       	ldi	r19, 0x05	; 5
 cde:	30 93 da 01 	sts	0x01DA, r19
 ce2:	20 93 d9 01 	sts	0x01D9, r18
unsigned long _avr_timer_M = 1; // Start count from here, down to 0. Default 1ms
unsigned long _avr_timer_cntcurr = 0; // Current internal count of 1ms ticks

// Set TimerISR() to tick every M ms
void TimerSet(unsigned long M) {
	_avr_timer_M = M;
 ce6:	80 93 02 01 	sts	0x0102, r24
 cea:	90 93 03 01 	sts	0x0103, r25
 cee:	a0 93 04 01 	sts	0x0104, r26
 cf2:	b0 93 05 01 	sts	0x0105, r27
	_avr_timer_cntcurr = _avr_timer_M;
 cf6:	80 93 0d 02 	sts	0x020D, r24
 cfa:	90 93 0e 02 	sts	0x020E, r25
 cfe:	a0 93 0f 02 	sts	0x020F, r26
 d02:	b0 93 10 02 	sts	0x0210, r27
	
	// Set the timer and turn it on
	TimerSet(GCD);
	TimerOn();
 d06:	83 da       	rcall	.-2810   	; 0x20e <TimerOn>
	// Scheduler for-loop iterator
	unsigned short i;
	while(1) {
		
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
 d08:	00 e0       	ldi	r16, 0x00	; 0
 d0a:	10 e0       	ldi	r17, 0x00	; 0
 d0c:	c1 2c       	mov	r12, r1
 d0e:	d1 2c       	mov	r13, r1
 d10:	3b c0       	rjmp	.+118    	; 0xd88 <main+0x1d0>
			// Task is ready to tick
			if ( tasks[i]->elapsedTime ==
 d12:	f8 01       	movw	r30, r16
 d14:	ee 0f       	add	r30, r30
 d16:	ff 1f       	adc	r31, r31
 d18:	81 e0       	ldi	r24, 0x01	; 1
 d1a:	90 e0       	ldi	r25, 0x00	; 0
 d1c:	8c 0f       	add	r24, r28
 d1e:	9d 1f       	adc	r25, r29
 d20:	e8 0f       	add	r30, r24
 d22:	f9 1f       	adc	r31, r25
 d24:	e0 80       	ld	r14, Z
 d26:	f1 80       	ldd	r15, Z+1	; 0x01
 d28:	d7 01       	movw	r26, r14
 d2a:	15 96       	adiw	r26, 0x05	; 5
 d2c:	4d 91       	ld	r20, X+
 d2e:	5d 91       	ld	r21, X+
 d30:	6d 91       	ld	r22, X+
 d32:	7c 91       	ld	r23, X
 d34:	18 97       	sbiw	r26, 0x08	; 8
 d36:	11 96       	adiw	r26, 0x01	; 1
 d38:	8d 91       	ld	r24, X+
 d3a:	9d 91       	ld	r25, X+
 d3c:	0d 90       	ld	r0, X+
 d3e:	bc 91       	ld	r27, X
 d40:	a0 2d       	mov	r26, r0
 d42:	48 17       	cp	r20, r24
 d44:	59 07       	cpc	r21, r25
 d46:	6a 07       	cpc	r22, r26
 d48:	7b 07       	cpc	r23, r27
 d4a:	81 f4       	brne	.+32     	; 0xd6c <main+0x1b4>
			tasks[i]->period ) {
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 d4c:	f7 01       	movw	r30, r14
 d4e:	80 81       	ld	r24, Z
 d50:	01 84       	ldd	r0, Z+9	; 0x09
 d52:	f2 85       	ldd	r31, Z+10	; 0x0a
 d54:	e0 2d       	mov	r30, r0
 d56:	99 27       	eor	r25, r25
 d58:	87 fd       	sbrc	r24, 7
 d5a:	90 95       	com	r25
 d5c:	09 95       	icall
 d5e:	d7 01       	movw	r26, r14
 d60:	8c 93       	st	X, r24
				// Reset elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
 d62:	f7 01       	movw	r30, r14
 d64:	15 82       	std	Z+5, r1	; 0x05
 d66:	16 82       	std	Z+6, r1	; 0x06
 d68:	17 82       	std	Z+7, r1	; 0x07
 d6a:	10 86       	std	Z+8, r1	; 0x08
			}
			tasks[i]->elapsedTime += 1;
 d6c:	f7 01       	movw	r30, r14
 d6e:	85 81       	ldd	r24, Z+5	; 0x05
 d70:	96 81       	ldd	r25, Z+6	; 0x06
 d72:	a7 81       	ldd	r26, Z+7	; 0x07
 d74:	b0 85       	ldd	r27, Z+8	; 0x08
 d76:	01 96       	adiw	r24, 0x01	; 1
 d78:	a1 1d       	adc	r26, r1
 d7a:	b1 1d       	adc	r27, r1
 d7c:	85 83       	std	Z+5, r24	; 0x05
 d7e:	96 83       	std	Z+6, r25	; 0x06
 d80:	a7 83       	std	Z+7, r26	; 0x07
 d82:	b0 87       	std	Z+8, r27	; 0x08
	// Scheduler for-loop iterator
	unsigned short i;
	while(1) {
		
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
 d84:	0f 5f       	subi	r16, 0xFF	; 255
 d86:	1f 4f       	sbci	r17, 0xFF	; 255
 d88:	04 30       	cpi	r16, 0x04	; 4
 d8a:	11 05       	cpc	r17, r1
 d8c:	10 f2       	brcs	.-124    	; 0xd12 <main+0x15a>
				// Reset elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag);
 d8e:	80 91 11 02 	lds	r24, 0x0211
 d92:	88 23       	and	r24, r24
 d94:	e1 f3       	breq	.-8      	; 0xd8e <main+0x1d6>
		TimerFlag = 0;
 d96:	10 92 11 02 	sts	0x0211, r1
	// Scheduler for-loop iterator
	unsigned short i;
	while(1) {
		
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
 d9a:	0c 2d       	mov	r16, r12
 d9c:	1d 2d       	mov	r17, r13
			}
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag);
		TimerFlag = 0;
	}
 d9e:	f4 cf       	rjmp	.-24     	; 0xd88 <main+0x1d0>

00000da0 <__tablejump2__>:
 da0:	ee 0f       	add	r30, r30
 da2:	ff 1f       	adc	r31, r31

00000da4 <__tablejump__>:
 da4:	05 90       	lpm	r0, Z+
 da6:	f4 91       	lpm	r31, Z
 da8:	e0 2d       	mov	r30, r0
 daa:	09 94       	ijmp

00000dac <__umulhisi3>:
 dac:	a2 9f       	mul	r26, r18
 dae:	b0 01       	movw	r22, r0
 db0:	b3 9f       	mul	r27, r19
 db2:	c0 01       	movw	r24, r0
 db4:	a3 9f       	mul	r26, r19
 db6:	70 0d       	add	r23, r0
 db8:	81 1d       	adc	r24, r1
 dba:	11 24       	eor	r1, r1
 dbc:	91 1d       	adc	r25, r1
 dbe:	b2 9f       	mul	r27, r18
 dc0:	70 0d       	add	r23, r0
 dc2:	81 1d       	adc	r24, r1
 dc4:	11 24       	eor	r1, r1
 dc6:	91 1d       	adc	r25, r1
 dc8:	08 95       	ret

00000dca <_exit>:
 dca:	f8 94       	cli

00000dcc <__stop_program>:
 dcc:	ff cf       	rjmp	.-2      	; 0xdcc <__stop_program>
